@model IEnumerable<TranslationModel>

@{
    var languages = Enum.GetValues(typeof(Language)).Cast<Language>().ToArray();
    var language = (string)Context.Request.Query["language"];
    var selectedLanguage = Enum.TryParse<Language>(language, out Language parsedLanguage)
        ? parsedLanguage
        : languages.FirstOrDefault();
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@Model.FirstOrDefault(x=>x.Key == "Title")?.Value - EditorAI</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/EditorAI.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">@Model.FirstOrDefault(x=>x.Key == "ApplicationName")?.Value</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">@Model.FirstOrDefault(x=>x.Key == "OptionHome")?.Value</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="dropdown" style="padding-left: 10px">
            @{
                if (Context.Request.Cookies.TryGetValue("selectedLanguage", out var languageValue))
                {
                    if (Enum.TryParse(languageValue, out Language selectedLanguage))
                    {
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="languageDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                            @selectedLanguage
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="languageDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                            @selectedLanguage.GetDescription()
                        </button>
                    }
                }
                else
                {
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="languageDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        @selectedLanguage.GetDescription()
                    </button>
                }
            }
            <div class="dropdown-menu" aria-labelledby="languageDropdown">
                @foreach (Language lang in Enum.GetValues(typeof(Language)))
                {
                    <a class="dropdown-item" href="#" onclick="changeLanguage('@lang')" id="@($"language-{(int)lang}")">@lang.GetDescription()</a>
                }
            </div>
        </div>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            <div id="loadingCircle" style="display:none; text-align: center;">
                <div class="spinner-border text-primary" role="status" style="margin-bottom: 10px;">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="lead mb-5" id="loadingCircleText">@Model.FirstOrDefault(x => x.Key == "LoadingCircleText")?.Value</p>
            </div>
            @RenderBody()
        </main>
    </div>

<footer class="border-top footer text-muted">
</footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/requestsHandler.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
